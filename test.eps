%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 981.000000 494.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 981 494
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 981 494
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAE+PingFangHK-Regular 001.003%%CreationDate: 3/21/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAE+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid1286 putdup 2 /gid1294 putdup 3 /gid1404 putdup 4 /gid1420 putdup 5 /gid1435 putdup 6 /gid1502 putdup 7 /gid1522 putdup 8 /gid1602 putdup 9 /gid1795 putdup 10 /gid1872 putdup 11 /gid1881 putdup 12 /gid1950 putdup 13 /gid2215 putdup 14 /gid2230 putdup 15 /gid2556 putdup 16 /gid2855 putdup 17 /gid2925 putdup 18 /gid2948 putdup 19 /gid3059 putdup 20 /gid3182 putdup 21 /gid3256 putdup 22 /gid3373 putdup 23 /gid3401 putdup 24 /gid3449 putdup 25 /gid3528 putdup 26 /gid3547 putdup 27 /gid3548 putdup 28 /gid3653 putdup 29 /gid3676 putdup 30 /gid4137 putdup 31 /gid4197 putdup 32 /gid4569 putdup 33 /gid4766 putdup 34 /gid5027 putdup 35 /gid5422 putdup 36 /gid6417 putdup 37 /gid6493 putdup 38 /gid6567 putdup 39 /gid6569 putdup 40 /gid6575 putdup 41 /gid6605 putdup 42 /gid6671 putdup 43 /gid6710 putdup 44 /gid6988 putdup 45 /gid7112 putdup 46 /gid7169 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6B330367828E0D72AA1C2FD3D75090A7E40CEF0B99DA24DA7280FA9A2DCCDBA5432CFA5285AFFDD159BFE55F07112644754B4BE8A196AC89067CFDB16337D6BDD24B0574588BFE68EF100C9B6192FA6890A620DD863B55150CB77438A1477B93E658B46D46CF24129A2A1B5B6A6F0B0322AEDF13878CC29056899635784AF5A2C538CBA0890C38FBF606287908A430DD59179F8AC7A4E49610613C248038AD2100D49CD104FF92FB800E33E224BB423607C01F9B1669A8FAD04F07BB54B45831FF3172069E678003446FCD271799C3711935AD0BE140E469B7FB5921907CE066FE25F4624E9A10F83EF2556C2F61C51949A1A5B18387C8185934C61D559A557AEDA264798E87DCA9091D6C8EE71E502EC480E9F761E1704D0F55F67077FBF762E0F2662F3FCE88DD79468782D64D34CD712A822FCFA1F78DC8FB6297963A47E34ED7591A281260E4CBE7F86BF255D975E73DB7882EFEB40A03B2DD9AE5B2B077C424D5A3EA00E3C3F3A38A9B685F60C35BC14D38128C7BED05D4B92A82C09EFAB47B2F29669F0724034C33C636C768FC3C20F537DF0FE71F7860FC14CF288857BD41759999E31EDAF0F3BE37DAD525C6CF2F5965D1ABCEF0F58BDAEEB60AFFA01B07C81FC5509C7C0120DA41D062291AB8803186DCB49A40F67F71F558894F5718B29922DFA5F4EA737019BFE0DBCA9DBE051EAC7400EE2B866295F37312C69BBCCB973D7519874CA053036770730F347AB34FF0D1BC71EF27D4A960575D856E45F6A2DE7700DF16E1557D40D65203DF0FD0099419E94B1E2AABF57E16DA2BB9D84CB75625531B4C0C7C88931E61A12A662CC4C141F301ED42B38895695498C68860B3CDB1A3625D0D2EEA4858CF596FDDB166B0FA2A3CA479DC756A308C1DC9F9FD2073D27BBC196D55E0DA420C42080E3B34F5224FC3E3E7917782FD9B0A9AA69FE486F1995F7EC12BFD85EDD2D452AE82990E6DBEC25B915184D9CCFBCF7EB1BFDB72E9B4C6F5538E7F57DEE67530CF467CB3E984E1510DDE22728A2E08B868159975FDD1FF79FD0AA6CCD28B64C80B7A6E6BB8C6638AAF52B1147C77B48165E85B291E2A6741963C2A7B7266E8543E00DA87BB6D8C8AF04D6F506C509D98932C1FCD891CCD1F4FCE15EFFE46BC0E57EFBA3EBF40CF2B22B71CBFF5C1AAA40511F9689EECC6778ED7CCBE614E6E16E67B0E0C0AF712BD8A8F30D3CDD64B9C626EDD13E9D957305994B55841D1807A89BCE3CF52AE811E699CDEEC1B399DE86A783BD5E0935B9A6061ED1455C4CA3D30064DCA12C6619126A813A84F4A3EBE64979FCB65BCA9424BD62B64A7BCCE4A57A220710E76A6BE104BD45B2EA2FAF7B9C67705560FC24154411D4492E006889E892349B2D18E229C7BD50F2B1ACBBF3454740A4AB07F0481F2E1D76FCA2005C71E34EC985132DA9B9B489B956FBDC9F1D2980C36A11DFB08F0EFAC195E76C3230E2E884F22934BBAE4A89EF5ED087FAE7071C0FA421E424A5435F2C21E4BA13D75238913190E7C60A48059A0463B17F35F58AF269B6D990458600870D4C31E9AD84806CD7AF3663F27AFFBF99A1411AE3AA849560363D6D7193F7FA461E73BD7BE8F192A62821F44B8A305973A19C13EB3F31F4D14DB05DC65E08E8F6B42F08B4FE27C6A07E0879381B573BE18F31B39060C62B603E2752CE4AF4D504D962B9756EA83D4EBA4D5821A251816286360A5083ABF4756FD74AE31CF4FCCDD70DCAE1F084934035F4F8EEEAA5717DCCD6FA7B5B3E6A82B3AD48AB7A50163C174B2683861E8C4C560F460A03C412CE7BDBCD89CB395C2CF439DE17CFFEAA0823DC2F548665D70E034F771BB80B8728CDE6F9B3F2A2A2426B0BFEF433809241C4F9EC4CD126C41B939FFD640B9BD05261E765850705257344E18C6A6982C35CE708EAD637D61D16FAAFE405FB324EB68F3F5624637717BDBB9F10F00BEEA7B37F36A22A2FD16EE81CC8CCAD833058D2D3B1309B4ED5B8DFCB8B953DBA354FB91D942EBE14921CDE475D0F2276401C580B13F40CA8E5D4B86AF39304FF16E2B6C489772492E64AF6FB829F82F3A7C8499B0996EEB5804FFC4EBDF7A027A21D59D7F31F490A12CDC717CB7944006AA7A2B19D7D618D72C1A689C6CBA303A9DB073393CF31A32EDB29F69007994953B9638FF29BB3C40505A135B07F28717A72459B874792F85EAE33D504AB0D6CADFC9CA32239DB07D967D9F686E98738ED39E1A6CB04386178E398242440A866743DB0B0D85B3445B02E27AC2A27E2E41C8F8E39B9495979BA5B3FC69350B63F4A7C2E4B59B2F73D2E34C7D6ACB108F36E0C0AD00CA3201382DC02BF7CC9FFB743CB0BE049E46F67D9A700C7CCDF5A6AD810FBCFE48592D5846EC292AC02F524512CE07483D4715C70A706EAAA854FC512F2F167EE70846851835BDED213F97041371BEA9FED515710AD2657AA3E6A602405AE52F0E31F52CBC8A9042441DB5720BA6185F4EE9B8435C73B27858C6B9F9BD8C6C977CA3BA2BEEFA42771487ACA0A73CC99B56CD16EE0526307A07BD8A2978071A0AEB9D1239DD99AC3E0392D7B798D166DFDAE2EC4A1BF215FEE84C19AC016C57A4E9F17B290A01263D4328E8B269CF6107C3458737A2634583FCAA96C258A6D7ABD361A55109126C810725CC2DA7FB0005060BB220E62B5849333321D00D380D1FE4CD2D13F18399B1CDB389BA51125A5E95D9CBB9E912D0DBF51498394F9C5BE4CAA0C76FEAD53485D33CE90183033BE49C20C147A10EE2FDE57F9C26BE6125B67B5374373FAF500D6CFFD428A5A8A97684C07AD7D880BECBE73518217843D4FF89F2497643E3AE466DC8ABED7E8463FFF7B0A03FFB65595B39DDC2B4CBF70B665A1EF5E9393AB1249524ACB3F906CDA845942C853D2EE99EA0AE40CD5A112DD56A55D6BB1E0F57B3E1AF8BCB247F1B19CEF0E41201666EA347FDDC071A27165520B77D26480CE68AA1156D09519C4AD4377D3B5C823980137CE0C2D67BDBD9F97022CB4381EDE1B8F4AF7B31CD06DDA8825BA1364314273B010FF57CDAB8AD4C61E9683CB5F4BA288737B1CC0B6B8B82D0415778F396494EA7E544A9999D472FA47677297E8A578C2E8A812F6EC6DA122FD6D54C5F04B58101A8D06288C89B7147F155659F57195AF52390DF0AE39DC48D385FCDC9EBABB35CA8130D7D99DBE312415503A5EC0B551F90B21D5348E3F6FBFA77114B0110B4F7A5398C4F7CFBDDEDD8D518198D58FD7265B627D2A4CFDA2C77006FF729AB340D92F00846C1927DC5D44F77B5A3257A7E7DBAF7E894BD006A0BE5788213641D8D1B7DD50C2279A68DA7FD48AA428CDD4DB717E0A323EF02620BBF09018753AE2D9517C307E57EFE075F91E7B76AA6A884ADAA4707D318079E66957BF7C85C0F28A4370BCB6CFD7CBACAB985DFDE73A5EABBF553F825990B26A8A17052B253D7F828A693CB320E3FD28C6A34D717EC671624BCD2C14EFDC4A6E2C2F822B93F951A6D81F9ABBD71ABA597BE73FEC48976B005F37CE2970D709381D83E52FC6605730EADA326F11D1B44C74DAC6FBAD49FB546BB5FBEAC04DB456509174B250428841B8A7C09D1D8726CAE84D6A02CACACA284EFED1542657F6B4A4EDD5E1A78BA0726772207D2194EF19091E483CFF11856C36BA7C2DFEC2826401663E90D2C4E29ED03156C4488F12B16F3D40A333EE25A6E5E4DBA368135DB4409254AAE52E7B47293ECC24AD6DB161416788253AD1EA4EBEB6ECD478DD96167004F1890CF791003D27F112921F4B836475C3CF22B7D08CB66178CE84777AC649A0BB266640F833D1317F6C0B905267724FA54271DD153A6198861F7A82C40B705B56FBC675BC64742D17E36FF6457330C565D62172F0BC7CD2BF6101B05197399469663B6933424AC8CC6B41E05BB9C384BCADC2DADA28E001D58C4DF0AAC21B3C54F59CC1A61EB60E679E954461016BE1089796B45BF2CDD3F72B751E3FDFF7947D2391D7F9924ACEE61AEAB15B690C97A0937EEDACC1B273851151170FB045EB5766F8AA4C2470253CF9A6F66FB057BFD31DF5958982A2E344D22F8045CE30CB0C35BFE596C5668D7832C94F6D234CF12BAC5673D04368A69FE39E70F01D9A9590A03040EC57278326B4E861DE6876EE7A7D6C47CB34AB68906DC55EF1BA8D93F7BA8B06A44E378ED0C634370C33A63D5C16C3F0B8E223335AFA1AD29D01FAEA1BEFCA27658CEE9E074310387C0CEC5F9C52B3707432827CBBFB8DFA0BB8FBCDA7C9CD3C1A23738E3C4F010F6D33A4FEF99B880E71AB5B99090B0CDBD066F844D14DD0F0C00A96E68B5FF6276387B8C6F77BC4A1F193C35EC9E627CED3FE51ECE89D572F639B86C93714E23104038095E4B76A3AEC983AFA0D22491AA386610DD0B0F1A900F658E65A20F7E962897099B3E46AF9314C0059235F7B7AD5C8503E431DA04E4976F5A279BF674894C083FBDBCA2E601744061CC7F5C2905DB51BC7831C6F1D2E1354CF071765193151B77D178B7CA5EA5B1E64E651DF6CEAC93962F83E6655342761474944A344701B80A2B325A46FCD2128A73CCEC08ED875848DBFE806CAB17F59222B74AA7810FBC4AB52E37A2373BBBA90FA897D0533FCA1343E39BBC1CE03329D8A6707AC276072714995B92224CD1B1FF34E13CC5FA495603D94D1EB0E40230216B50D7F4646F1E8D0BF0C2476F0F28875BAD94E417BA2889CF52ECE84CED402D8B568F26DDCC4628E9B6AFF0ACC2545CD57A4970E07B53966F0A5D856CFFBD1F6F85AE09FE79990E061C085727E1B7144E19666F846249608033FF22E45A59002F80D4CFF4EC7A18CC6F1674664BAEF6E9C060A544A97EC7F4778A7E86B20B0EC0FB9F0C5E03717F23FB5A624C528554396CD3754D65E4F4549E32660A1AB7DD9E2220ACCFC48FC52A0C60EC029F81B35DED0C4A689D78FE1EC224F2E7E7348A68295BD70EF02EA0D6BC83CA3A107B6CE529616060C14CB581DA2BF018098F6B0F4D418BBDFB7B290B7238D341692CDE4AB725C93DD4971B7527AA7619A02D460818AD961BBC01D1E0139BEA665633F8E30CB5F6297206A0E7852D0F758E8ED3C51DEB68E4C74BF17A734CA4ACAB4DDD777FED2FB0C6D7AE2ED45A1DD02D457A681C20E0ECF2B1738F7630D7F85CF7CDA524C8B374AACE6A6A7B02BE5A01BC7D5D5461BEAF707CF5FE93C7ABDB28842BD204595233591DAD0BACEEC2C886D178D78E351FC06DF63D6CB17430DE48A90725AE2F13DE0591A2A096AB2FED03134DC27A84813ECAF2767DAEA64352FDB8767E0530F627AD870272E5A89F3FF8FFED17808B09B78C3C8ADA4F947EB477C1C6E36E658EC041249BECDD907C3C807264676A8CF774AC845BAC5DAA8C1478A66327005A506260B64BC692B4DD98A4368847EF434B02CEA3977E17F070B14C0315E33128FF25E4277ADE3B25E4ABF58666D36C8ED7980BAC97B607DE6D9B34B5B11733425E7E72DEF9ED8E000316F9C830AE3552758AEED5515C311ED99895558B994D931425DAC7ED733BCFB4E839536A00286C69375E9E0B9BF4DFA94819014CC9063F82FD40FD10C68EBF815D40D760F252EF9D880205687AA6A76C380221D4C472100204423BABFAD56A8899A7E1D09111ECC709207F718D82077A2785F84E96B734C9E59D36A180A8792016B724BD57DE054634165C1A89F036736BADD2D12A5C53816868CFE6951E6FBDB8ED3D9CF42304A33DE571DE2692ACEF09A3B377FD71557351B7158DDEBFF961D732CE853A139744D61B9BB2CC75DDDD135D5069CFA1F41BEE982A6595D92D5385CB9473EEE92A5D949C5EC35BCE78854401A53D89E5E24090689B8F1B7AE26E7BDE4BB096DE59622A2E77B0FDE68A85A5F5040AFC9CFCFE35F98DA5A03C5C48DCBA961B30201A79D95CFE13710F96634A33102040B5A44E27BC543783D3871A4395B4BB929C1EAF001C491173208E4A397E6F7C7A1DC988F36C7F8E42EDFEF7C1A90BC4ADBA6B4C1F9010BD5E8F77981C015EB4C13BC3AFD31B7C07FB9F6384C2FF22AB3A77BCF94E5D89411C82AB3FEF7B85E84417C6DDD660356C01D48104876EA7ACC9CC0BF645A1E052C0B39FA4730417CA7A7944BF6E6882D71516397B0D6295FD5D256AACF69D156CC8C890676417596942DCE7F110B72447911600F489F913257EFE8C671BEF795A2D4AC38299DE9431B81015F4C88D37AD30CEC2B9C7DCF19C075A01AF40A623975C4336145AD3746F7081EC90FFC161DFE3FD9B3F43469094323CF765E04BE85EF2C33E87D673DE93E0CD70EFA3FB57A00733EABA4E0AD61DA4BB00E3F44661E9D9279FB1F28C7D5DE688A68268E2D2100B5E29423F0FE012E2A2484FC7C70888C471CEA9AE3A08B029B0C8C4D12EB5C9FC47DD4CC229B1E869B34CAB4B4379C068F8D322E0AC144783343D43D32E7DE53F523BD00081C2EFC5842A7D73A712B500F55A9356CA9547F176BF6C4B68B534DD711B98EAC41D628A30BF41FA5EDAE1B63BBC0DB95919800D4A7E9F664A24A9A881370416DACBF75CB9F45B19B480E0608BFB8939F6EA41C606071750AE314705E9B516940E3FF186C1EFFEFB1EF80F7142CBBE1A92F36E82D9F3852E7A21596EC3084BE3FD7F519AF86D59CFE520C6677C058C15832D3EC89A3C3C89FD174FB0DD303DB0B813914EA67D349482F0C3A751CBD2991FD8CCC05A5FA2DFD19CD4D748EBC021E155FCC46CF14ADC4D68F39AD46EF1AD6E1F8A52751C876B17631EB4CB2C50E58FDEFA7EC5D95D7C46F05ABC434F6779EFBC2D6C9E18151303372147333DA4301B64A642236D9110A98B4D52CE9290B254D869FD6CE7536C25951A9FC903BCF6CF095B7BA8CDDF7EA9FCD9457C91DF077B33025EA1F57F248D057536E532E8125ACC2A71675FBC3147024D902E563C8827CC340A4415797F19CFF84ED887098A20351C5B2B724275B3CA7978D282C9F6AD0CA4B167F9EE8691151291EC7452BEA96C15C805D937DDAE8B10AD522DD319D2D06261B91026A6D296124F80113996E94F0B8BCC31E141C37896CB78216F0E72034CE9BE417E08898CA602B536CC1C74B3D7499BB1EEFE83A2BEA80527849C82C85C1F4BE22E5FBA96797C9BA74F8C29DF5E9991FE1CC32F2AD6637F28723EA00235AEBF6A925390AA570FF66F9B88B3D3BC4D9A8BE2E00DD823255589D156F28FCE6D906676F3513759C9AE73922E5A7933721DABAC19CDE40D9CE2EC5318E31093078AEE28832C4CF36A8B753B3718143A29472F5EC445BAD86C11355F9DC14127E235ECA3D91673D46A45B1ED77BD3344D83F7C1EA3805D88817D9938E413A0306BC8CC7D99C42405595171187B82EF383FD465909651F4137760C5E2DFEA0B6E2EEFB026286D12D3CDA624CF70912F32EC15A219D1CF5F5D18BF590DE245255C41D49AFEE115BBE071ADB213E228A3490EED0919A4814EFC5D222FD2BB10A6444C0A0A8A86932F73348C827293E6C8C8AD2BB6478B741BC0732240B2DB69FDCDCD95BFB38E5324122533F88720246103B7CDEC8CD314D116A3C09284023E08E9B73D4953166580099E8276173D44B81164CAD6B4C137C89000C2B1F2D3527536DED03EF2A286AAE64754EAFB9C16430CC71049F0898D88D61A7EA225BF433605E0AB9F13241226E32179E1E4C889CD19EE9783880884E88ADE0C65E215BBAEBDA48DB4A386CF95E3E02562CFD02BC2BF1387992FBB89DD551AAE11EA509B2508A8A991B03F414617043857DDE05190E4D98819E7FF30E88661A1B631B0AAB56D727DAC7ADA66863B3177EEED20413722379C127258D4AC72BD3FBF5928E9259F880F6EB8287BFCBF67DA120AF57C0521BD63A34FD005C133A3DFCBD631472249C8FDCE5DACC3551B576FEAB8A66F20F145E502AB63F8FC109B71E0A0D4EAFB9B33EE679AEA072D6AEF6B8B92D0479D33E72D2A269650B7E86C5BA0673600105DB3EC19374614DB5E12BEBF4B990EF3E14E8B71B482042E8A6C96297E23CFCE94114EB48BA37A29A6C2E7BB81082B042E54A9B50B3D0BA2F4A21163351944A1F6DB32864E1EB996B5AEADBFC6C152133549E2FE0D5F0C3CEB011B4D6D2F9AC3A7289DDC6A7F077A5D97FA7124DD7BD8AF28F89E24D0CDDE8E15F5B4E56DFE0ADD73405FFF1B7000BE302A88C85B61DC0D2959822151D4EA812B4D5CE8116E98987AC5C86B4EDC951D507DB1F3692EE1C291B8CBEBCE7F52C4F84CB8176867037A8B31BFF694F01ADDADA74E124926175A38DB43F673C741E6B245FEAAFD32A3AC3BE82B059292156CBF3254139C786F73D52BBE0CE29E59A7FBE8EF36306DAEAEFE4E78C8B8AC1029A254CC6BEC6485AB13D9E9BB34EE2B61B1A08DA3CD80ADBF826D0B5B04E868E935109629E63D583C432323A1D28DFEE2B2CD894A4AE58FE4D056969AB8C0C4B656F614400A6E7237A5CE5D45CB7F5700EEAE69C12D026FB88A0A3018F99A5754DB1C2074CEB87B3B25246F6440545B984B122FA863C4C5021A2E692B198301DB23AC54056A433772B0E05F833382C34E57340E52DB73EDD662D7ABC30B556BC762DD807312FFD48DADC06111F3A029B98F5B51CF3F600AC4964A48CAEE67696E1187AD19D2585DEDD1D24A5FFB764E68BFC80B5B4C8783D65DB5B2ED4D84B8C8A83B73410ABB5DDEB87ECB9F02CEEA7C7F926998D47A90318DFF66A00F42B5515089D3DA8C98041E05F521204138C0A3DF2BDCD476B5E4D5F1F119B67360280E48175AFF7678843AD24F464F5FDA83A71B252FE6274E8A657C456CF4F7A94394FD517973872CF1834C3B7D14A92A78FEDCD36C775AE9FAC3739904D02894AE068B4D3267C47AAF5E9EABD20DEA97E437BAD67848787E4EFAEB09034E4C2EC4E1788E27D0AC2E9D7493EE397B86B9318ADE5F847E7B6C9F72881B7C5D8CD3D89BB4DC7F95F69061D425A86C90E6775991A6A5BE23134ECF823D50DCEE3C1B39B69D5C507B68DAC34CA6037B93C9D771285CA90D83BBD266997C55F1E2DFE3F69BA0D27EB764A17CC541D6A2451392C4E3E2FE5DE66DE6F0F817A0EC00B081A86F9D3EAAA39F1CA45FC0F8B154E2532D5D7CAC32D8230320965A651CEA8EBDC90DBBB58C5B352BCA82A192F8F22918FD00C4620B83D28A1AF59F40F3F867B1134990EF215B151FD2A1E9AACCFE5643F8F146016123FA6355B0DE754A05B42C42B4599560BCF5D0EC155DD50F1E9D61BD06004E05D01DC4F7301C0E59BA4A8A7FBBC81AFF53745CCDDB7CA1DDAA042688D9EF5F18316C74EDF1DF4F259F0610BE9771F3AD543F626FAAE3BE6394E78B509D151278800B2F7C633FAB552CB48E84AB3FCC5AEF375BD0303CBD20A0C5DC5C0C2548028ED53BBA52614B410D145232AC664D1DF3902803DB9E366B16CD7A2D323682A1088B3AE4A54FC14A474CDE16421E9F1A5CB756E9DD62EF4EC3BBB3BEB8AE10CE692DFC71EDD277457B4210FFD0031AC2E7286330078CFFFAA0E1B646BBDD82ABA8605309A418F997778EDB0EC158DF325AFE73E3FE054EBAB404EF26A8B8BC50533EAC555E54A7C5B5FE94DEE46CA82838259B006B23E9CCBABE9BD1813FC25FFF3C22271A63B88CD2B50E43B07441A487ED95860B98058A28975957A3AEFF7CD7310887C5888C6D72D258258E3FFE317CD58675DCB3BDDAAC1CDE8C4462AB0768E7DD3C857D27DC39E46E682D809016B2626C8A3321F14F7F83E8AC78C0CE66640143A6FD6716283F7E949F660744297BFE5B0150296CE68ECBB6E7089F1BA62CDDC7794BECB52E8A377D5622588AC427A38AC92BDFFA4B858472561DEFD825283312D0B71C3B73DF90901123E31D61785253D3487554A96B7D7083D0B47B42FB6DF0AC34D33E0A9CE5351A269523E390BA3986C27998C4C7F4E902FD1C3CEEEA0BB212FCEF1C58D77AE47944023D3D869B024367830EC923363DB3995364C1A62A7D93E8760205B7F34BB3C4319FFF9BD67A05262F5BCF44521A0DE4D30106945DBC56B562DB11A9BA2171A3DC3CD67AEC39A3C7BA72B8426BD39B4924A3008B813B595AADA0E8C5D3089BB8C2F6109D83BD47DCC10443EE8DCEED4F3F062814470777A0847D46371613769EBE70CE2ACA46D17B493D8618734EF198CF1FFDC91EE51E162BE9CABD088529916FC82019D3DB4E400B05F740A2EFA147DF0B992182138D28B7CDDB6CE2C49A54D898918BD504E85143A9BB1654E74E83781D4E58D542255BE07198F1606ABC719FFE4AC92E8B2EF086D1B1253F632FE978DDAFDEAB7D0B3CC71219C253551AA427B065D264205904AB772D9E21014E75499B728DB899606066FEAF3AA6F2AC01E83962E8E2C505AD3F34925C0AF071280D1A6E8B4A4367756448E9FB2A200F71362575F09B2AED7F72C5C1EC78E9E8014C2F8EEB41B6DE8F1D46C83B9A7CDB81A4E21D3EF68B2AC748D097FF937BEA6787E4679F1C9881399D9B9F727AFBF30C318C8446FA082A086F7A39566B17067DB4951853212B1408CA12B5520A4AC974255784DABBE4791B38E4AF704DE3035A442CCF3CF21A4FB12F8B9C4AB77DF678BC5BE14759DD30155B627C26226BDD88575B66613E8721032354754E758BA3F3BE21D1E02C537838C1DA0A3BD58F5D44F0B16C08931F6EF510EAA1647CF2AD8D6398E40389843C0E4F32E12DD25D43706D1601DEFF895F4A5D26321A5EFB34D5A597CEAD4C5440127A222AA1694049DF6755A6789E3CF4C2278412FEF5EAA385266C71F9EFA13344C382AC42385DB1DB8A1ED1AB7EB8CB46822AC155F78EACB2E90BFCC0ABDCC66B4CE3889A55F31A37165CF8AB1B94C88FD4E16DD30633BDE6E6EF89B514B7BE8516F4A1922FC8CB832F333642C5645A123C3DFCEDCBB6A4B8ABD9DB9659C412967A6735E469C3976D4209F093C957932BA4C9DB0F157A625D6E46247EB815ADCD5261E8DD9FCF7CCB17B92D2368F8A34CC520BA7CDA6D4B30D247D1B6AC07AC5CEAA8756453B3151B900D03575DF1AEE5E5769DD418357BA026CFD4F7978881AE232E2CF06DFED134CA91C1CCF9BCDD3CE5CF3E59F2787850C6AE90A37CACDE1F970B1C5E9861D6378E37CAEF8AAE18C4FD1867E2B7987564B584C584507FDD82FFE1935F365584AB3B354FF428138AB81830FEF3150A389771DE8411393175B39D6F6E8E07F7B4BED726F11522DB517463D40106D9B7276996C3D42A46F31BD7F4FD5536E4BBF21B6667D898A5201969C0CB72D8BEC93A28086F2513EC3C1C83A7C55709E7CDD02910F5B2BAFE03B49EF3B6F2E393148E41CDD21FCE436E82B7689A0072C82CD0FF53F1F6320BB2E31A1CD7AD4F52EEAA3481AF2D2A6960ED1174D9906CF9194756AE97E4EB3C7EB17CA1D1199A9C27F2ED34EAC2CE0B9B5DBFCC3EDEF40A9F084904B7B86CAE5748BA2F8F80A4AE2896F670B7FCF5E6A9E2D08463703E2BB48EEECB45A63D8481A7B1E2DDDCB2BC1200CF1E8FE3E74A128EFCD9917C667AEDFFE5EA665A4B913157B50CED5A30FC3406E88006EE0F31123FE4C803C84072C937F0554F72C4076749CFB2D54FC7691956F13ECD19753E9A8D5A6802666B750CBB33A6DBCBAA9F2B4F666CBAE88B589D6BDE9788CB7F11875D0914FDD06F3D4E21F18851C8609B7147B1753FF4FF15DE9F75B06B356BE62F62C6965EF53E838867BCF5481FBDF212128410159C1E81EC799CD920B1E8A24C4FA825E73424998EFB6D25BA6106A7659938A7379D6C40CF3B67F53ECA26099B137B8F410E9457C6348AB6255B43729F7934CBA23B5A98BBCABDA61DB206D1A031653FFA9E2DFDE98255D5C64DDDD58D230F38A3EF1FA04DDD708DDD5A66C1DD7712567E8637FAF41EAD3CBDED7B0B7861122FC32252719FA62C3AEAD0C8790C259521075CF3B0A9F91E61F83A19B408AEE8456D2C8C2C69E3419D5EDB8E958CAF7D0A1A254A32D2DAD57336D2D2338EF786B8EBB02928C51515898B3AB4C17E7AF9B269EDA0EEDBD3C29BACC0B0FFB915DA39CB7A9E5E22723823B347687A35540D5DCB0B75A34F31D2721206B88A08203504FA2E51C46C93E21CB9D6A148834FA5653D55A49C2D610956F3AD7F11851472C397719B75CD8ADD999F880C97591A7F82F96A9C2BA0EB2ED151C7AA0D7BAACC7ED81EED8914DCE39EB69330C5EE471FC0C1343C12F2564334042661E64F9E953EE0F239B57DDB45A2BDB579211EF137ADB14C69F145537A868C16DE6A5385D2E9BDBC300C79CDE4F94784F18EFB65B846D3311993AA5E4024D3C43EEF59612E4EE5AD1590B79B98B8AFC1BE71CBB38FDA72B1C0583AA2DA23849FF0844EDDBC1FAC247DD5AE5D89BBC413CE220C18EE5BCDC03C87FAF1F5677B2D9A8149198E704E739B28DE04F293E98DFF545E31090BEE0A99F303D5CFD43CD46B14A4E2D53405175A0A955DA8565A6ABABBAA277CE7924710840A2D7997CCDA39CC26125B0BF1C82987C5BDBA76A61455D03E56B3F542980B0E6918819443A58D99E15FB424E9532EA448A02EF14C798EE0EB746B23CB22C3CD8DF836D0A14A80FD8A8EA97F69B044A7419BE3BCA3290D3C50A0F8EC088067BC0A24CA4D4A7EFB44893192CCD189C5CCB65C8D9880B85224A03DD0EE21243B49C8F7856925DFF87ECA1A394C96437627FCF0F790B5C6D6C6C76627FD65145D6CCABAE1C8A76D72C886F557EEDA86143B90420F3904445310712195E5AD861405D580114C3B8F0BAB1598922BB004FA3CD9BB36BDFB64F1A6DFBD90D7913E22892D8ABFC1D37D741A52B2A0DE7489E7ED9ED3D73649F01FC9537D17B126D232B166FBC4D5C604F872DDF3C740F0AF23F216DC366CF319F9F4C616D8CFF7001F402BB3C8C16E040796060E519AD6E2949DD769BAC99C5AED20D1DFC3D849BBD2009880AEAEDEF26D00F10CF3D46524648FA7CFEC16BD8615BFB249CA64D61885CB3A3E8ADC4E69EABD9576457F7926D5DCF23BD2E02A9F945F88A64DA46B02B8B4215F805392E2E3AC0A6629378741D3FAE692C7DE2E42BCBFC2FBA6CCDA0AA99B2B4F900EA55F63E42CE6DCF0D65EC2C53A3E9F04BF2356C1D051336B8FB93678D089C66C9B898B635427975E2DCD65EC05A82E38DC3DAAA301BE957923BC01E0C45F0855A2DA35AD5D6F8E45B5138A50DE6A24980DCDB1A7CE3DFA704F8E14E43D575447A3AFF34C098C775F7AC9C7351ACF91B2070B9F962E2249A3D7B1062214C54A56794E2CCE0CF591A337F7FE26EEC89500EFC4C92B227C5B0FF119041EA5DCF48A366FB2F29759AA3FD2DEAD9DD509D1F3C5FD86BF0D2A3AF9743E6895B7CA669ED60FEE4E55213AA5E9372B47628B15C4882C5553733B54201C39249B675F7524AE5790F19556E56267356E487545DFE5AA26BA909C8145EACD745FBA6228B5901F6609093CB7E1514B73C988CE192C7689D7DC1E7FFB116117B4CF4846FC476575CCB0B9B46C2F55407BF0E145A5903F6F45A26CC73BB976791E9BC8BB70F44F6489253C5C174F05DB1A93EAEBECFA2A0A71E8BAFD8AC5D86B10D7D716B28E9B607226E77C555544E79BA86D3D8D76223D063E57454D56EDAFEE0A63F56C48BF52ACD90677358805474324EC3C750F3CCF0795A6E21B30DA81B9F407EE383E340B75C2D32696A2CDB0706F52744F158340C5C077A07CE0DEF1CCB2DC09E0E0BAF68FADD0277A2E46A7D2728A234BB2DE8FBC23E73CFCFA603807E26F422C673F9F78E1E064DC00D11206B544661807C2693CAED59E6DC927C793826DEF390F626E5FD6C154359A41FF90E4ACFB00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid1404 putdup 34 /gid4197 putdup 35 /gid3256 putdup 36 /gid1950 putdup 37 /gid6710 putdup 38 /gid7169 putdup 39 /gid6567 putdup 40 /gid1420 putdup 41 /gid6575 putdup 42 /gid4137 putdup 43 /gid1881 putdup 44 /gid6605 putdup 45 /gid1294 putdup 46 /gid1502 putdup 47 /gid3059 putdup 48 /gid3373 putdup 49 /gid2855 putdup 50 /gid1522 putdup 51 /gid6988 putdup 52 /gid1286 putdup 53 /gid2230 putdup 54 /gid6671 putdup 55 /gid6417 putdup 56 /gid1602 putdup 57 /gid5027 putdup 58 /gid6569 putdup 59 /gid2556 putdup 60 /gid4569 putdup 61 /gid2948 putdup 62 /gid3528 putdup 63 /gid3676 putdup 64 /gid3401 putdup 65 /gid1872 putdup 66 /gid1795 putdup 67 /gid7112 putdup 68 /gid3449 putdup 69 /gid6493 putdup 70 /gid4766 putdup 71 /gid3182 putdup 72 /gid1435 putdup 73 /gid5422 putdup 74 /gid3548 putdup 75 /gid2215 putdup 76 /gid2925 putdup 77 /gid3653 putdup 78 /gid3547 putreadonly def/$SubFontArray [/AAAAAE+PingFangHK-Regular findfont ] def/CharProcs 48 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid1286 {(\001) 0 $SP} putdup /gid1294 {(\002) 0 $SP} putdup /gid1404 {(\003) 0 $SP} putdup /gid1420 {(\004) 0 $SP} putdup /gid1435 {(\005) 0 $SP} putdup /gid1502 {(\006) 0 $SP} putdup /gid1522 {(\007) 0 $SP} putdup /gid1602 {(\010) 0 $SP} putdup /gid1795 {(\011) 0 $SP} putdup /gid1872 {(\012) 0 $SP} putdup /gid1881 {(\013) 0 $SP} putdup /gid1950 {(\014) 0 $SP} putdup /gid2215 {(\015) 0 $SP} putdup /gid2230 {(\016) 0 $SP} putdup /gid2556 {(\017) 0 $SP} putdup /gid2855 {(\020) 0 $SP} putdup /gid2925 {(\021) 0 $SP} putdup /gid2948 {(\022) 0 $SP} putdup /gid3059 {(\023) 0 $SP} putdup /gid3182 {(\024) 0 $SP} putdup /gid3256 {(\025) 0 $SP} putdup /gid3373 {(\026) 0 $SP} putdup /gid3401 {(\027) 0 $SP} putdup /gid3449 {(\030) 0 $SP} putdup /gid3528 {(\031) 0 $SP} putdup /gid3547 {(\032) 0 $SP} putdup /gid3548 {(\033) 0 $SP} putdup /gid3653 {(\034) 0 $SP} putdup /gid3676 {(\035) 0 $SP} putdup /gid4137 {(\036) 0 $SP} putdup /gid4197 {(\037) 0 $SP} putdup /gid4569 {( ) 0 $SP} putdup /gid4766 {(!) 0 $SP} putdup /gid5027 {(") 0 $SP} putdup /gid5422 {(#) 0 $SP} putdup /gid6417 {($) 0 $SP} putdup /gid6493 {(%) 0 $SP} putdup /gid6567 {(&) 0 $SP} putdup /gid6569 {(') 0 $SP} putdup /gid6575 {(\() 0 $SP} putdup /gid6605 {(\)) 0 $SP} putdup /gid6671 {(*) 0 $SP} putdup /gid6710 {(+) 0 $SP} putdup /gid6988 {(,) 0 $SP} putdup /gid7112 {(-) 0 $SP} putdup /gid7169 {(.) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F1.1/PingFangSC-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /l put
dup 35 /i put
dup 36 /e put
dup 37 /v put
dup 38 /L put
dup 39 /o put
dup 40 /g put
dup 41 /s put
dup 42 /t put
dup 43 /c put
dup 44 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000186670676D00000000000000B400000428676C796600000000000004DC00000970686561640000000000000E4C00000036686865610000000000000E8400000024686D74780000000000000EA8000000386C6F63610000000000000EE00000001E6D6178700000000000000F0000000020707265700000000000000F200000004D14000014004B005A00000011FF3A000B0205000C02CA0011B800002C4BB800095058B101018E59B801FF85B844001DB9000900035F5E2DB800012C2020456944B001602DB800022CB800012A212DB800032C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800042C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800052C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800062C2020456944B001602020457D691844B001602DB800072CB800062A2DB800082C4B20B003265358B0801BB040598A8A20B003265358B0022621B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B80003265358B0032545B8014050582321B8014023211BB003254523212321591B2159442DB800092C4B535845441B2121592DB8000A2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8000B2C2020456944B001602DB8000C2CB8000B2A212DB8000D2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8000E2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB8000F2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800102C2020456944B001602020457D691844B001602DB800112CB800102A2DB800122C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800132C4B535845441B2121592DB800142C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800152C2020456944B001602DB800162CB800152A212DB800172C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800182C2046B00425465258238A592046206A6164B0042546



00>] def
/CharStrings 14 dict dup begin
/.notdef 0 def
/space 1 def
/L 2 def
/S 3 def
/c 4 def
/e 5 def
/g 6 def
/i 7 def
/l 8 def
/o 9 def
/s 10 def
/t 11 def
/v 12 def
/uni2B91 13 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4151493 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B0B7175CE49F0688B3F79EA3DBC898217EC91EE332F98D08B0D78E06DCB0675981CDFF7A19DE4473677EFF86C3C7FAA0517B27475EF04CD9F4419A4FF2F888DF02972DC7704BDBAC88925C55BCED1E3F9964D739BB10C19C9715FBE995F3F4F076DA200111B9E91EDBECCDBDBC5A6D34B84C236667F1AEC351B63BE460216AEBE868B70F59BE61111A56A32FA5F054CFC3FC25B381ACE94087D8FA44E9750D81DF8304627A2CD77096195342F304B7A8613C11DE274B2DF1FF7B969BC9C29517DC3542B63F1663DE4F6C61C5D7F09E5BD9ACC6E8D65377F897308A025590DA6971E7F76D0FF87B0E5AF1D65C6EBD27F83A7D951D67AD35E033C9BBEAA76B51D5AC6F1694B550FFE276E7474C648AD462545676ECD268DB94C9B4EE214F8994E0AF243B6447E6FBE97F1AFFFF6FE0CA08C04D0899D41972F18005DDAB762A017B92D4242B4FF8199991139D8417F2FD3EEC2976125660108BA920EFEEA608F572EA4BDEE8122FB43E46839F2E6606C0A27E50EDB5C5309721B9010C653C137CD2C71C0A432A13FEA3E9ECA81370B11886EA28AA4BD2D3BCE7FB46932BC26FFE14B6A5F14A5DA81F273D3F02D919C620F33E35F40459236FA9B1D0F4C4E7F71E33C2ABE81BBE5EA688482221E666F3C50F306A76E6D53D7A9B4C84FCA5B5B82488298E0F5140936B96BFF2ACA86AE07C722F740F241CC6E38DAAB0CD13617A8A7E615E535A32931CC80D0EBE21F68C30178A7ACFC35C113FC0BE914A3083EA9CF6


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 981 494 rc
0 494 m
981 494 l
981 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1121 1256 m
2102 1256 l
2102 -762 l
-1121 -762 l
h
-1121 1256 m
f
/Cs1 SC
0 sc
1 0 0 -1 57 411.75 cm
/F1.1[ 16 0 0 -16 0 0]sf
-32 6 m
(!"#$)[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
160 473 m
560 473 l
560 350.5 l
160 350.5 l
h
160 473 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
179 707 m
579 707 l
579 829.5 l
179 829.5 l
h
179 707 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 360 448.5 cm
-32 6 m
(%&'\()[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
180.5 414 m
254.5 414 l
254.5 365 l
180.5 365 l
h
180.5 414 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
199.5 766 m
273.5 766 l
273.5 815 l
199.5 815 l
h
199.5 766 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 217.5 389.5 cm
-32 6 m
(\)*'\()[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
270.5 414 m
344.5 414 l
344.5 365 l
270.5 365 l
h
270.5 414 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
289.5 766 m
363.5 766 l
363.5 815 l
289.5 815 l
h
289.5 766 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 307.5 389.5 cm
-32 6 m
(+*'\()[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
360.5 414 m
434.5 414 l
434.5 365 l
360.5 365 l
h
360.5 414 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
379.5 766 m
453.5 766 l
453.5 815 l
379.5 815 l
h
379.5 766 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 397.5 389.5 cm
-32 6 m
(,-'\()[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
447 414 m
539.5 414 l
539.5 365 l
447 365 l
h
447 414 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
466 766 m
558.5 766 l
558.5 815 l
466 815 l
h
466 766 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 493.25 389.5 cm
-40 6 m
(./&'\()[ 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -19 1180 cm
113 768.25 m
169.10001 768.25 l
S
0 i
CM
158.10001 411.75 m
150.10001 414.75 l
150.10001 408.75 l
h
158.10001 411.75 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
177.10001 768.25 m
169.10001 765.25 l
169.10001 771.25 l
h
177.10001 768.25 m
S
/Cs1 SC
0 sc
1 0 0 -1 617 411.75 cm
-16 6 m
(01)[ 16.000000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -19 1180 cm
579 768.25 m
605.09998 768.25 l
S
0 i
CM
594.09998 411.75 m
586.09998 414.75 l
586.09998 408.75 l
h
594.09998 411.75 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
613.09998 768.25 m
605.09998 765.25 l
605.09998 771.25 l
h
613.09998 768.25 m
S
/Cs1 SC
0 sc
1 0 0 -1 721 411.75 cm
-40 6 m
(234#$)[ 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -19 1180 cm
657 768.25 m
685.09998 768.25 l
S
0 i
CM
674.09998 411.75 m
666.09998 414.75 l
666.09998 408.75 l
h
674.09998 411.75 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
693.09998 768.25 m
685.09998 765.25 l
685.09998 771.25 l
h
693.09998 768.25 m
S
1 1 1 sc
CM
673.84406 315.09402 m
680.38531 308.55273 680.38531 297.94727 673.84406 291.40598 c
667.30273 284.86465 656.69727 284.86465 650.15594 291.40598 c
643.61469 297.94727 643.61469 308.55273 650.15594 315.09402 c
656.69727 321.63535 667.30273 321.63535 673.84406 315.09402 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
692.84406 864.90594 m
699.38531 871.44727 699.38531 882.05273 692.84406 888.59406 c
686.30273 895.13531 675.69727 895.13531 669.15594 888.59406 c
662.61469 882.05273 662.61469 871.44727 669.15594 864.90594 c
675.69727 858.36469 686.30273 858.36469 692.84406 864.90594 c
S
0 i
1 1 1 sc
CM
733.84406 309.09402 m
740.38531 302.55273 740.38531 291.94727 733.84406 285.40598 c
727.30273 278.86465 716.69727 278.86465 710.15594 285.40598 c
703.61469 291.94727 703.61469 302.55273 710.15594 309.09402 c
716.69727 315.63535 727.30273 315.63535 733.84406 309.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
752.84406 870.90594 m
759.38531 877.44727 759.38531 888.05273 752.84406 894.59406 c
746.30273 901.13531 735.69727 901.13531 729.15594 894.59406 c
722.61469 888.05273 722.61469 877.44727 729.15594 870.90594 c
735.69727 864.36469 746.30273 864.36469 752.84406 870.90594 c
S
0 i
1 1 1 sc
CM
703.84406 245.09402 m
710.38531 238.55275 710.38531 227.94725 703.84406 221.40598 c
697.30273 214.86467 686.69727 214.86467 680.15594 221.40598 c
673.61469 227.94725 673.61469 238.55275 680.15594 245.09402 c
686.69727 251.63533 697.30273 251.63533 703.84406 245.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
722.84406 934.90594 m
729.38531 941.44727 729.38531 952.05273 722.84406 958.59406 c
716.30273 965.13531 705.69727 965.13531 699.15594 958.59406 c
692.61469 952.05273 692.61469 941.44727 699.15594 934.90594 c
705.69727 928.36469 716.30273 928.36469 722.84406 934.90594 c
S
0 i
1 1 1 sc
CM
781.84406 245.09402 m
788.38531 238.55275 788.38531 227.94725 781.84406 221.40598 c
775.30273 214.86467 764.69727 214.86467 758.15594 221.40598 c
751.61469 227.94725 751.61469 238.55275 758.15594 245.09402 c
764.69727 251.63533 775.30273 251.63533 781.84406 245.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
800.84406 934.90594 m
807.38531 941.44727 807.38531 952.05273 800.84406 958.59406 c
794.30273 965.13531 783.69727 965.13531 777.15594 958.59406 c
770.61469 952.05273 770.61469 941.44727 777.15594 934.90594 c
783.69727 928.36469 794.30273 928.36469 800.84406 934.90594 c
S
0 i
1 1 1 sc
CM
798.84406 309.09402 m
805.38531 302.55273 805.38531 291.94727 798.84406 285.40598 c
792.30273 278.86465 781.69727 278.86465 775.15594 285.40598 c
768.61469 291.94727 768.61469 302.55273 775.15594 309.09402 c
781.69727 315.63535 792.30273 315.63535 798.84406 309.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
817.84406 870.90594 m
824.38531 877.44727 824.38531 888.05273 817.84406 894.59406 c
811.30273 901.13531 800.69727 901.13531 794.15594 894.59406 c
787.61469 888.05273 787.61469 877.44727 794.15594 870.90594 c
800.69727 864.36469 811.30273 864.36469 817.84406 870.90594 c
S
0 i
1 1 1 sc
CM
666.84406 202.09402 m
673.38531 195.55275 673.38531 184.94725 666.84406 178.40598 c
660.30273 171.86467 649.69727 171.86467 643.15594 178.40598 c
636.61469 184.94725 636.61469 195.55275 643.15594 202.09402 c
649.69727 208.63533 660.30273 208.63533 666.84406 202.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
685.84406 977.90594 m
692.38531 984.44727 692.38531 995.05273 685.84406 1001.5941 c
679.30273 1008.1353 668.69727 1008.1353 662.15594 1001.5941 c
655.61469 995.05273 655.61469 984.44727 662.15594 977.90594 c
668.69727 971.36469 679.30273 971.36469 685.84406 977.90594 c
S
697.66736 878.41675 m
724.33264 881.08325 l
S
757.75 882.75 m
789.25 882.75 l
S
801.69916 898.94128 m
793.30084 930.55872 l
S
[
4
4
] 0 d
1 0.57637233 0 sc
751.05127 896.15167 m
778.94873 933.34833 l
S
[] 0 d
0 0 0 sc
718.11121 931.57941 m
733.88879 897.92059 l
S
[
4
4
] 0 d
1 0.57637233 0 sc
727.75 946.75 m
772.25 946.75 l
S
[] 0 d
0 0 0 sc
700.07446 959.44727 m
684.92554 977.05273 l
S
740.8537 866.00061 m
740.1441 784.75 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 766.75 357.625 cm
-32 6 m
(5678)[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
334.09402 315.09402 m
340.63535 308.55273 340.63535 297.94727 334.09402 291.40598 c
327.55273 284.86465 316.94727 284.86465 310.40598 291.40598 c
303.86465 297.94727 303.86465 308.55273 310.40598 315.09402 c
316.94727 321.63535 327.55273 321.63535 334.09402 315.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
353.09402 864.90594 m
359.63535 871.44727 359.63535 882.05273 353.09402 888.59406 c
346.55273 895.13531 335.94727 895.13531 329.40598 888.59406 c
322.86465 882.05273 322.86465 871.44727 329.40598 864.90594 c
335.94727 858.36469 346.55273 858.36469 353.09402 864.90594 c
S
0 i
1 1 1 sc
CM
394.09402 309.09402 m
400.63535 302.55273 400.63535 291.94727 394.09402 285.40598 c
387.55273 278.86465 376.94727 278.86465 370.40598 285.40598 c
363.86465 291.94727 363.86465 302.55273 370.40598 309.09402 c
376.94727 315.63535 387.55273 315.63535 394.09402 309.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
413.09402 870.90594 m
419.63535 877.44727 419.63535 888.05273 413.09402 894.59406 c
406.55273 901.13531 395.94727 901.13531 389.40598 894.59406 c
382.86465 888.05273 382.86465 877.44727 389.40598 870.90594 c
395.94727 864.36469 406.55273 864.36469 413.09402 870.90594 c
S
0 i
1 1 1 sc
CM
364.09402 245.09402 m
370.63535 238.55275 370.63535 227.94725 364.09402 221.40598 c
357.55273 214.86467 346.94727 214.86467 340.40598 221.40598 c
333.86465 227.94725 333.86465 238.55275 340.40598 245.09402 c
346.94727 251.63533 357.55273 251.63533 364.09402 245.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
383.09402 934.90594 m
389.63535 941.44727 389.63535 952.05273 383.09402 958.59406 c
376.55273 965.13531 365.94727 965.13531 359.40598 958.59406 c
352.86465 952.05273 352.86465 941.44727 359.40598 934.90594 c
365.94727 928.36469 376.55273 928.36469 383.09402 934.90594 c
S
0 i
1 1 1 sc
CM
442.09402 245.09402 m
448.63535 238.55275 448.63535 227.94725 442.09402 221.40598 c
435.55273 214.86467 424.94727 214.86467 418.40598 221.40598 c
411.86465 227.94725 411.86465 238.55275 418.40598 245.09402 c
424.94727 251.63533 435.55273 251.63533 442.09402 245.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
461.09402 934.90594 m
467.63535 941.44727 467.63535 952.05273 461.09402 958.59406 c
454.55273 965.13531 443.94727 965.13531 437.40598 958.59406 c
430.86465 952.05273 430.86465 941.44727 437.40598 934.90594 c
443.94727 928.36469 454.55273 928.36469 461.09402 934.90594 c
S
0 i
1 1 1 sc
CM
459.09402 309.09402 m
465.63535 302.55273 465.63535 291.94727 459.09402 285.40598 c
452.55273 278.86465 441.94727 278.86465 435.40598 285.40598 c
428.86465 291.94727 428.86465 302.55273 435.40598 309.09402 c
441.94727 315.63535 452.55273 315.63535 459.09402 309.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
478.09402 870.90594 m
484.63535 877.44727 484.63535 888.05273 478.09402 894.59406 c
471.55273 901.13531 460.94727 901.13531 454.40598 894.59406 c
447.86465 888.05273 447.86465 877.44727 454.40598 870.90594 c
460.94727 864.36469 471.55273 864.36469 478.09402 870.90594 c
S
0 i
1 1 1 sc
CM
327.09402 202.09402 m
333.63535 195.55275 333.63535 184.94725 327.09402 178.40598 c
320.55273 171.86467 309.94727 171.86467 303.40598 178.40598 c
296.86465 184.94725 296.86465 195.55275 303.40598 202.09402 c
309.94727 208.63533 320.55273 208.63533 327.09402 202.09402 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
346.09402 977.90594 m
352.63535 984.44727 352.63535 995.05273 346.09402 1001.5941 c
339.55273 1008.1353 328.94727 1008.1353 322.40598 1001.5941 c
315.86465 995.05273 315.86465 984.44727 322.40598 977.90594 c
328.94727 971.36469 339.55273 971.36469 346.09402 977.90594 c
S
357.91739 878.41675 m
384.58261 881.08325 l
S
418 882.75 m
449.5 882.75 l
S
461.94919 898.94128 m
453.55081 930.55872 l
S
411.30127 896.15167 m
439.19873 933.34833 l
S
378.36121 931.57941 m
394.13879 897.92059 l
S
388 946.75 m
432.5 946.75 l
S
360.32446 959.44727 m
345.17554 977.05273 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 729 163 cm
-32 6 m
(9:56)[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
39.5 297 m
275 297 l
275 196.25 l
39.5 196.25 l
h
39.5 297 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
58.5 883 m
294 883 l
294 983.75 l
58.5 983.75 l
h
58.5 883 m
S
0 i
1 1 1 sc
CM
165.75 255 m
239.75 255 l
239.75 212.5 l
165.75 212.5 l
h
165.75 255 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
184.75 925 m
258.75 925 l
258.75 967.5 l
184.75 967.5 l
h
184.75 925 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 202.75 233.75 cm
-32 6 m
(;5<=)[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
74.75 255 m
148.75 255 l
148.75 212.5 l
74.75 212.5 l
h
74.75 255 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
93.75 925 m
167.75 925 l
167.75 967.5 l
93.75 967.5 l
h
93.75 925 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 111.75 233.75 cm
-32 6 m
(#$>?)[ 16.000000 16.000000 16.000000 0.000000 ] xS
1 0 0 -1 157.25 275.5 cm
-32 6 m
(<=@A)[ 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
487.5 275.25 m
586.5 275.25 l
586.5 218.25 l
487.5 218.25 l
h
487.5 275.25 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -19 1180 cm
506.5 904.75 m
605.5 904.75 l
605.5 961.75 l
506.5 961.75 l
h
506.5 904.75 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 537 246.75 cm
-32 6 m
(;5BC)[ 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -19 1180 cm
657 933 m
615.39996 933.10297 l
S
0 i
CM
588.40002 246.87723 m
596.40741 243.89703 l
596.39252 249.89702 l
h
588.40002 246.87723 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
607.40002 933.1228 m
615.40741 936.10297 l
615.39252 930.10297 l
h
607.40002 933.1228 m
S
1 J
1 j
0.60000002 i
721.59998 784.75 m
595.15234 898.14056 l
S
0 i
CM
570.19635 276.51849 m
578.15521 279.62595 l
574.14948 284.09296 l
h
570.19635 276.51849 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
589.19635 903.48151 m
597.15521 900.37402 l
593.14948 895.90704 l
h
589.19635 903.48151 m
S
1 1 1 sc
CM
94.5 156.25 m
220 156.25 l
220 99.25 l
94.5 99.25 l
h
94.5 156.25 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
113.5 1023.75 m
239 1023.75 l
239 1080.75 l
113.5 1080.75 l
h
113.5 1023.75 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 157.25 127.75 cm
-32 6 m
(DEFG)[ 16.000000 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -19 1180 cm
176.25 983.75 m
176.25 1013.85 l
S
0 i
CM
157.25 158.14999 m
160.25 166.14999 l
154.25 166.14999 l
h
157.25 158.14999 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
176.25 1021.85 m
179.25 1013.85 l
173.25 1013.85 l
h
176.25 1021.85 m
S
1 J
1 j
0.60000002 i
506.5 932.59259 m
480.89523 932.25256 l
S
0 i
CM
453.89594 247.85367 m
461.85538 244.74771 l
461.93506 250.74718 l
h
453.89594 247.85367 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
472.89594 932.1463 m
480.85538 935.25232 l
480.93506 929.25281 l
h
472.89594 932.1463 m
S
1 J
1 j
0.60000002 i
328 946 m
268.64996 946.13965 l
S
0 i
CM
241.64999 233.84152 m
249.65703 230.86037 l
249.64291 236.86035 l
h
241.64999 233.84152 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
260.64999 946.15845 m
268.65704 949.13965 l
268.64291 943.13965 l
h
260.64999 946.15845 m
S
1 1 1 sc
CM
571.5 104.5 m
799 104.5 l
799 20.5 l
571.5 20.5 l
h
571.5 104.5 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
590.5 1075.5 m
818 1075.5 l
818 1159.5 l
590.5 1159.5 l
h
590.5 1075.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 674 88 cm
-48 6 m
(%&'\(HI)[ 16.000000 16.000000 16.000000 16.000000 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
583.75 71.5 m
673.75 71.5 l
673.75 25 l
583.75 25 l
h
583.75 71.5 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
602.75 1108.5 m
692.75 1108.5 l
692.75 1155 l
602.75 1155 l
h
602.75 1108.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 628.75 48.25 cm
/F2.1[ 16 0 0 -16 0 0]sf
-37.327999 6 m
(!"#$%$)[ 10.368000 3.552000 3.552000 8.592000 8.000000 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
5.3280001 6 m
(J*)[ 16.000000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
693.75 71.5 m
783.75 71.5 l
783.75 25 l
693.75 25 l
h
693.75 71.5 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -19 1180 cm
712.75 1108.5 m
802.75 1108.5 l
802.75 1155 l
712.75 1155 l
h
712.75 1108.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 738.75 48.25 cm
/F2.1[ 16 0 0 -16 0 0]sf
-38.223999 -5 m
(&'\(#\)*#+,)[ 8.896000 9.184000 9.184000 3.552000 8.000000 5.040000 3.552000 8.592000 0.000000 ] xS
/F1.1[ 16 0 0 -16 0 0]sf
22.224001 -5 m
(K)s
-24 17 m
(L'\()[ 16.000000 16.000000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -19 1180 cm
703 991.5 m
703.73511 1065.6005 l
S
0 i
CM
684.81451 106.39991 m
687.73499 114.42928 l
681.73529 114.36975 l
h
684.81451 106.39991 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
703.81451 1073.6001 m
706.73499 1065.5707 l
700.73529 1065.6302 l
h
703.81451 1073.6001 m
S
1 J
1 j
0.60000002 i
818 1117.5 m
979.00391 1117.5 l
979.00391 1016.8008 l
979.00391 882.75 l
832.65002 882.75 l
S
0 i
CM
805.65002 297.25 m
813.65002 294.25 l
813.65002 300.25 l
h
805.65002 297.25 m
f
0 J
0 j
1 0 0 -1 -19 1180 cm
824.65002 882.75 m
832.65002 885.75 l
832.65002 879.75 l
h
824.65002 882.75 m
S
/Cs1 SC
0 sc
1 0 0 -1 936.5 163 cm
-16 6 m
(MN)[ 16.000000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
